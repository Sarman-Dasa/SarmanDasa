create database employeedb;

 SHOW databases;

use employeedb;

drop database employeedb;

/* -------------------------- //copy Database //  -------------------------- */
/* Pending */


/* -------------------------- //Create Table //  -------------------------- */

create TABLE employee
(
    emp_Id INT,
    emp_name varchar(30),
    city VARCHAR(50),
    phone VARCHAR(10)
);
/* -------------------------- //Show  Table //  -------------------------- */
    > SHOW TABLES;
/* -------------------------- //DESCRIBE Table //  -------------------------- */
>DESCRIBE employee;
>desc employee;

 /* -------------------------- //ALTER Table //  -------------------------- */
 ALTER TABLE employee
 add emp_age int(3)
 after city;


 /*  -------------------------- // MODIFY column //  -------------------------- */

 ALTER TABLE employee
 MODIFY city VARCHAR(30)
 after emp_age;

 /*  -------------------------- DROP column  -------------------------- */

 ALTER TABLE employee
 DROP COLUMN emp_age;

/*  -------------------------- RENAME column  -------------------------- */

ALTER TABLE employee
CHANGE COLUMN emp_name e_name varchar(20) 

/*  -------------------------- RENAME table  -------------------------- */
ALTER TABLE employee
RENAME TO TBL_Employee;

/* ------------------------- Show Table Command ----------------------- */
> show FULL TABLES;

> show tables in employee_DB;
> > show tables FROM employee_DB;

/* ---------------------- Show Tables Using Pattern Matching ------------- */

> show tables FROM empployee_DB like 'TBL%';

> show  full tables from employee_DB where Table_type = "BASE TABLE";


/*--------------------- TRUNCATE Table -------------------------- */

CREATE TABLE test2(
    id INT,
    name VARCHAR(20)
);

TRUNCATE test2;

SET  FOREIGN_KEY_CHECKS = 0; /* IF FOREIGN KEY RELASTIONSHIP TABLE  */

SET FOREIGN_KEY_CHECKS = 1; /* AFTER TRUNCATE TABLE SET 1 */

/* ---------------------- Temporary Table ------------------- */

CREATE TEMPORARY TABLE TEMP_EMPLOYEE SELECT * FROM TBL_EMPLOYEE;


INSERT INTO TBL_EMPLOYEE VALUES(1,'DASA','PBR','9056453423');

/*---------------------- Copy/Clone/Duplicate Table --------------------- */

create table copy_tbl 
SELECT emp_Id,e_name,phone from TBL_EMPLOYEE;

/*---------- WHERE Condition ----------------- */
create table copy_tbl1
SELECT emp_Id,e_name,phone from TBL_EMPLOYEE where e_name like 'D%';

/*  ----------------------  copy only table structure ----------------------  */

create TABLE copy_tbl3 like TBL_EMPLOYEE;

/* ---------------------- insert data from other table ---------------------- */
insert copy_tbl3 SELECT * from TBL_EMPLOYEE;


/*  ---------------------------    INDEXs Example ---------------------------- */

use employee_DB;
create table employee
(
	Emp_id int,
    Emp_name varchar(20),
    dob date,
    age int,
    department varchar(20),
    gender varchar(6)
);

desc employee;
truncate employee;

insert into employee values(1,'rahul','1990/10/19',32,'M.com','Male');
insert into employee values(2,'bharat','2000/01/15',22,'MCA','Male');
insert into employee values(3,'vijay','2000/10/19',22,'BCA','Male');
insert into employee values(4,'rohit','2001/01/19',21,'B.Tech','Male');
insert into employee values(5,'pardip','2001/10/14',21,'M.Farma','Male');
insert into employee values(6,'jaymal','2001/2/28',21,'M.Tech','Male');
insert into employee values(7,'raju','2002/4/17',20,'B.com','Male');
insert into employee values(8,'rahul','1990/10/19',32,'M.com','Male');
insert into employee values(9,'bharat','2000/01/15',22,'MCA','Male');
insert into employee values(10,'vijay','2000/10/19',22,'BCA','Male');
insert into employee values(11,'rohit','2001/01/19',21,'B.Tech','Male');
insert into employee values(12,'pardip','2001/10/14',21,'M.Farma','Male');
insert into employee values(13,'jaymal','2001/2/28',21,'M.Tech','Male');
insert into employee values(14,'raju','2002/4/17',20,'B.com','Male');

select * from employee;

create INDEX empdob on employee(dob);

show index from employee;

drop INDEX empdob on employee;

/*------------------------ // CONSTRAINT EXample // -------------------------------------- */


create table employee_TBL(
    EMPID INT PRIMARY KEY AUTO_INCREMENT,
    EMPNAME VARCHAR(20) NOT NULL,
    EMPDEPT VARCHAR(30) NOT NULL,
    EMPCITY VARCHAR(30) DEFAULT 'GANDHINAGAR',
    EMPEMAIL VARCHAR(30)  UNIQUE KEY,
    EMPPHONE VARCHAR(10) UNIQUE KEY
);

INSERT INTO employee_TBL VALUES(NULL,'VIJAY','PHP DEVALOPER','PORBANDAR','VIJAY123@GMAIL.COM','9078564534');
INSERT INTO employee_TBL VALUES(NULL,'RAHUL','PHP DEVALOPER','PORBANDAR','RAHUL12@GMAIL.COM','8978564536');

INSERT INTO employee_TBL VALUES(NULL,'BHARAT','PYTHON DEVALOPER','RAJKOT','PYTHON','BHARAT@GMAIL.COM','9978564535');
INSERT INTO employee_TBL VALUES(NULL,'PRADIP','JAVA DEVALOPER',DEFAULT,'JAVA','PRADIP@GMAIL.COM','9178564533');
INSERT INTO employee_TBL VALUES(NULL,'YASH','ANDROID DEVALOPER','PORBANDAR','PHP','YASH@GMAIL.COM','9878564544');
INSERT INTO employee_TBL VALUES(NULL,'MEHUL','KOTLIN DEVALOPER','PORBANDAR','PHP','MEHUK@GMAIL.COM','9778564588');

INSERT INTO employee_TBL VALUES(NULL,'KANA','WEB DEVALOPER','RAJKOT','PYTHON','KANA@GMAIL.COM','9978567535',15000);
INSERT INTO employee_TBL VALUES(NULL,'KARAN','BACKEND DEVALOPER',DEFAULT,'JAVA','KARAN@GMAIL.COM','9173464533',60000);
INSERT INTO employee_TBL VALUES(NULL,'KISHAN','NODEJS DEVALOPER','PORBANDAR','PHP','KISHAN@GMAIL.COM','7638564599',20000);
INSERT INTO employee_TBL VALUES(NULL,'SAJAY','ANGURAL DEVALOPER','PORBANDAR','PHP','SAJAY@GMAIL.COM','9767564588',10000);

INSERT INTO employee_TBL VALUES(NULL,'GOPAL','WEB DEVALOPER','RAJKOT','PYTHON','GOPAL@GMAIL.COM','9645857589',15000);
INSERT INTO employee_TBL VALUES(NULL,'NILESH','BACKEND DEVALOPER',DEFAULT,'JAVA','NILESH@GMAIL.COM','9173466533',60000);
INSERT INTO employee_TBL VALUES(NULL,'BHIMA','NODEJS DEVALOPER','PORBANDAR','PHP','BHIMA@GMAIL.COM','7638568999',20000);
INSERT INTO employee_TBL VALUES(NULL,'HARDAS','ANGURAL DEVALOPER','PORBANDAR','PHP','HARDAS@GMAIL.COM','9769664588',10000);

ALTER TABLE employee_TBL ADD EMPSKILL ENUM('PHP','LARAVEL','PYTHON','JAVA') AFTER EMPCITY;

UPDATE EMPLOYEE_TBL SET EMPSKILL = "PHP" WHERE  EMPCITY = "PORBANDAR";

UPDATE EMPLOYEE_TBL SET EMPCITY = "GANDHINAGAR" WHERE EMPCITY = '';

ALTER TABLE EMPLOYEE_TBL ADD EMPSALARY BIGINT;

UPDATE EMPLOYEE_TBL SET EMPSALARY = 45000 WHERE EMPCITY = 'PORBANDAR';
UPDATE EMPLOYEE_TBL SET EMPSALARY = 35000 WHERE EMPCITY <> 'PORBANDAR';

UPDATE EMPLOYEE_TBL SET EMPSALARY = 50000 WHERE EMPCITY = 'GANDHINAGAR';

SELECT * FROM EMPLOYEE_TBL;

/* ----------------------------// MySQL AND Condition //---------------------------*/

SELECT * FROM EMPLOYEE_TBL WHERE EMPCITY = "PORBANDAR" AND EMPSKILL = "PYTHON";

SELECT * FROM EMPLOYEE_TBL WHERE EMPCITY = "PORBANDAR" OR EMPSKILL = "PYTHON";

SELECT DISTINCT EMPSKILL FROM EMPLOYEE_TBL;

SELECT * FROM EMPLOYEE_TBL WHERE EMPNAME LIKE '_A%';

SELECT * FROM EMPLOYEE_TBL WHERE EMPNAME LIKE '%A%';

SELECT * FROM EMPLOYEE_TBL WHERE EMPSKILL IN('PHP',"LARAVEL");

SELECT EMPNAME,EMPCITY FROM EMPLOYEE_TBL
WHERE EXISTS(SELECT * FROM EMPLOYEE_WORKING_HOUR WHERE EMPLOYEE_TBL.EMPID = EMPLOYEE_WORKING_HOUR.EMPID);

SELECT * FROM EMPLOYEE_TBL WHERE EMPSALARY NOT IN(30000,50000,40000);

SELECT * FROM EMPLOYEE_TBL WHERE EMPSALARY BETWEEN 30000 AND 40000;

SELECT * FROM EMPLOYEE_TBL WHERE EMPCITY IS NULL;

SELECT * FROM EMPLOYEE_TBL WHERE EMPCITY IS NOT NULL;

SELECT * FROM EMPLOYEE_TBL
WHERE EMPSALARY = (SELECT MIN(EMPSALARY) AS "MINIMUM SALARY"
FROM EMPLOYEE_TBL);

SELECT EMPSKILL, COUNT(*) FROM EMPLOYEE_TBL
GROUP BY EMPSKILL;


SELECT EMPNAME, COUNT(*) FROM EMPLOYEE_TBL
GROUP BY EMPNAME;

/* --------------------\\ HAVING \\ ------------------------ */

SELECT EMPNAME, MAX(EMPSALARY) 
FROM EMPLOYEE_TBL
GROUP BY EMPNAME
HAVING MAX(EMPSALARY) > 40000;

DROP TABLE EMPLOYEE_WORKING_HOUR;
CREATE TABLE EMPLOYEE_WORKING_HOUR(
    WORK_ID INT PRIMARY KEY AUTO_INCREMENT,
    WORK_DATE DATE,
    WORKINNG_HOUR INT,
    EMPID INT,
    FOREIGN KEY(EMPID) REFERENCES EMPLOYEE_TBL(EMPID)
);

INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,CURDATE(),8,1);
INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,CURDATE(),8,3);
INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,CURDATE(),8,4);

INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,CURDATE(),6,5);
INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,CURDATE(),14,6);
INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,CURDATE(),5,7);

INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,CURDATE(),6,8);
INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,CURDATE(),14,9);
INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,CURDATE(),5,10);
INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,CURDATE(),5,11);


INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,'2023-01-18',8,1);
INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,'2023-01-18',8,3);
INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,'2023-01-18',8,4);

INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,'2023-01-18',6,5);
INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,'2023-01-18',14,6);
INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,'2023-01-18',5,7);

INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,'2023-01-18',4,8);
INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,'2023-01-18',12,9);
INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,'2023-01-18',5,10);
INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,'2023-01-18',5,11);

INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,'2023-01-17',5,1);
INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,'2023-01-17',5,3);
INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,'2023-01-17',5,4);

INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,'2023-01-17',5,5);
INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,'2023-01-17',5,6);
INSERT INTO EMPLOYEE_WORKING_HOUR VALUES(NULL,'2023-01-17',5,7);


SELECT * FROM EMPLOYEE_WORKING_HOUR;
SELECT * FROM EMPLOYEE_TBL;
/* ----------------------- // Join // ---------------------------- */
/* inner join */

SELECT EMPNAME,WORKINNG_HOUR 
FROM EMPLOYEE_TBL AS A
INNER JOIN EMPLOYEE_WORKING_HOUR AS B ON (A.EMPID = B.EMPID)

SELECT *
FROM EMPLOYEE_TBL AS A
INNER JOIN EMPLOYEE_WORKING_HOUR AS B ON (A.EMPID = B.EMPID)

SELECT * 
FROM EMPLOYEE_TBL AS A
RIGHT JOIN EMPLOYEE_WORKING_HOUR AS B ON (A.EMPID = B.EMPID);

SELECT EMPNAME,SUM(WORKINNG_HOUR)
FROM EMPLOYEE_TBL AS A
JOIN EMPLOYEE_WORKING_HOUR AS B ON(A.EMPID = B.EMPID)
WHERE EMPNAME LIKE 'R%'
GROUP BY EMPNAME;



SELECT AVG(WORKINNG_HOUR) FROM EMPLOYEE_WORKING_HOUR;

SELECT EMPNAME,AVG(WORKINNG_HOUR) AS "AVRANGE HOUR",COUNT(*) AS "DAYS"
FROM EMPLOYEE_TBL AS E
JOIN EMPLOYEE_WORKING_HOUR AS EW ON(E.EMPID = EW.EMPID)
GROUP BY EMPNAME;


SELECT EMPNAME,AVG(WORKINNG_HOUR) AS "AVRANGE HOUR",COUNT(*) AS "DAYS"
FROM EMPLOYEE_TBL AS E
JOIN EMPLOYEE_WORKING_HOUR AS EW ON(E.EMPID = EW.EMPID)
GROUP BY EMPNAME
HAVING COUNT(*) > 2 AND AVG(WORKINNG_HOUR) > 10;


SELECT EMPNAME,LENGTH(EMPNAME) FROM EMPLOYEE_TBL
WHERE LENGTH(EMPNAME) > 5;

SELECT EMPNAME,AVG(WORKINNG_HOUR) AS "AVRANGE HOUR",COUNT(*) AS "DAYS"
FROM EMPLOYEE_TBL AS E
JOIN EMPLOYEE_WORKING_HOUR AS EW ON(E.EMPID = EW.EMPID)
WHERE LENGTH(EMPNAME) >=4
GROUP BY EMPNAME
HAVING COUNT(*) > 2 AND AVG(WORKINNG_HOUR) > 10;



SELECT EMPNAME,SUM(WORKINNG_HOUR)
FROM EMPLOYEE_TBL AS A
JOIN EMPLOYEE_WORKING_HOUR AS B ON(A.EMPID = B.EMPID)
GROUP BY EMPNAME
HAVING SUM(WORKINNG_HOUR) > 25;

SELECT EMPNAME,MAX(WORKINNG_HOUR)
FROM EMPLOYEE_TBL AS A
JOIN EMPLOYEE_WORKING_HOUR AS B ON(A.EMPID = B.EMPID)
GROUP BY EMPNAME;


/* ------------- DELETE JOIN //-----------*/

DELETE EMPLOYEE_TBL,EMPLOYEE_WORKING_HOUR
FROM EMPLOYEE_TBL AS E
INNER JOIN EMPLOYEE_WORKING_HOUR AS EW ON(E.EMPID = EW.WORK_ID)
WHERE E.EMPID = 11;












/*-----------------------// MAX SALARY //----------------------- */
SELECT MAX(EMPSALARY) FROM EMPLOYEE_TBL;

/*-----------------------// SECOND MAX SALARY //-----------------------*/

SELECT MAX(EMPSALARY) FROM EMPLOYEE_TBL
WHERE EMPSALARY < (SELECT MAX(EMPSALARY) FROM EMPLOYEE_TBL);

/*-----------------------// THIRED MAX SALARY //-----------------------*/

SELECT MAX(EMPSALARY) FROM EMPLOYEE_TBL
WHERE EMPSALARY < (SELECT MAX(EMPSALARY) FROM EMPLOYEE_TBL
WHERE EMPSALARY < (SELECT MAX(EMPSALARY) FROM EMPLOYEE_TBL)
);

/*-----------------------//  MIN SALARY //-----------------------*/

SELECT MIN(EMPSALARY) FROM EMPLOYEE_TBL;

/*-----------------------// SECOND MIN SALARY //-----------------------*/

SELECT MIN(EMPSALARY) FROM EMPLOYEE_TBL
WHERE EMPSALARY >(SELECT MIN(EMPSALARY) FROM EMPLOYEE_TBL);


/*-----------------------// THIRED MIN SALARY //-----------------------*/

SELECT MIN(EMPSALARY) FROM EMPLOYEE_TBL
WHERE EMPSALARY > (SELECT MIN(EMPSALARY) FROM EMPLOYEE_TBL
WHERE EMPSALARY > (SELECT MIN(EMPSALARY) FROM EMPLOYEE_TBL)
);
